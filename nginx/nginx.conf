load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;

pcre_jit on;

events {
  worker_connections 1024;
}

daemon off;
error_log /dev/stdout info;


http {
  access_log /dev/stdout;

  upstream ru_app {
    server app1:8080;
  }

  upstream ali_app {
    server app2:8080;
  }

  server {
    listen 80;

    location / {
      client_max_body_size 8k;
      client_body_buffer_size 8k;

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Url-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      proxy_redirect off;

      if ($request_method = GET) {
        set $upstream '';
        access_by_lua_block {
          local match = ngx.re.match(ngx.var.uri, [[id=\d[2-3]\d{2}\d{16}]])

          if match then
            ngx.var.upstream = "ali_app"
          else
            ngx.var.upstream = "ru_app"
          end
        }

        proxy_pass http://$upstream;
      }

      if ($request_method = POST) {
        set $upstream '';
        access_by_lua_block {
          ngx.req.read_body()
          local data = ngx.req.get_body_data()
          local match = ngx.re.match(ngx.var.request_body, [[id=\d[2-3]\d{2}\d{16}]])

          if match then
            ngx.var.upstream = "ali_app"
          else
            ngx.var.upstream = "ru_app"
          end
        }

        proxy_pass http://$upstream;
      }
    }
  }
}
